(function() {var implementors = {};
implementors["vault"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.REGISTRY.html\" title=\"struct vault::metrics::REGISTRY\">REGISTRY</a>","synthetic":false,"types":["vault::metrics::REGISTRY"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.AVERAGE_BTC_FEE.html\" title=\"struct vault::metrics::AVERAGE_BTC_FEE\">AVERAGE_BTC_FEE</a>","synthetic":false,"types":["vault::metrics::AVERAGE_BTC_FEE"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.LOCKED_COLLATERAL.html\" title=\"struct vault::metrics::LOCKED_COLLATERAL\">LOCKED_COLLATERAL</a>","synthetic":false,"types":["vault::metrics::LOCKED_COLLATERAL"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.COLLATERALIZATION.html\" title=\"struct vault::metrics::COLLATERALIZATION\">COLLATERALIZATION</a>","synthetic":false,"types":["vault::metrics::COLLATERALIZATION"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.REQUIRED_COLLATERAL.html\" title=\"struct vault::metrics::REQUIRED_COLLATERAL\">REQUIRED_COLLATERAL</a>","synthetic":false,"types":["vault::metrics::REQUIRED_COLLATERAL"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.UTXO_COUNT.html\" title=\"struct vault::metrics::UTXO_COUNT\">UTXO_COUNT</a>","synthetic":false,"types":["vault::metrics::UTXO_COUNT"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.BTC_BALANCE.html\" title=\"struct vault::metrics::BTC_BALANCE\">BTC_BALANCE</a>","synthetic":false,"types":["vault::metrics::BTC_BALANCE"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.ISSUES.html\" title=\"struct vault::metrics::ISSUES\">ISSUES</a>","synthetic":false,"types":["vault::metrics::ISSUES"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.REDEEMS.html\" title=\"struct vault::metrics::REDEEMS\">REDEEMS</a>","synthetic":false,"types":["vault::metrics::REDEEMS"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.NATIVE_CURRENCY_BALANCE.html\" title=\"struct vault::metrics::NATIVE_CURRENCY_BALANCE\">NATIVE_CURRENCY_BALANCE</a>","synthetic":false,"types":["vault::metrics::NATIVE_CURRENCY_BALANCE"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"vault/metrics/struct.FEE_BUDGET_SURPLUS.html\" title=\"struct vault::metrics::FEE_BUDGET_SURPLUS\">FEE_BUDGET_SURPLUS</a>","synthetic":false,"types":["vault::metrics::FEE_BUDGET_SURPLUS"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()